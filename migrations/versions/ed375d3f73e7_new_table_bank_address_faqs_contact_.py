"""New Table bank,address,faqs,contact,debt,home_carousel,company_setting,delivery_p_s,special_offer,wish_list

Revision ID: ed375d3f73e7
Revises: a96094ced374
Create Date: 2024-11-13 11:50:49.080840

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'ed375d3f73e7'
down_revision: Union[str, None] = 'a96094ced374'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('company',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_name', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('slug', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('location', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('facebook', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('twitter', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('google_plus', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('instagram', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('products_amount_for_discount', sa.Integer(), nullable=False),
    sa.Column('discount', sa.Float(), nullable=True),
    sa.Column('delivery_per_km', sa.Integer(), nullable=True),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('lat', sa.Float(), nullable=True),
    sa.Column('lng', sa.Float(), nullable=True),
    sa.Column('cut_business', sa.Float(), nullable=True),
    sa.Column('cut_individual', sa.Float(), nullable=True),
    sa.Column('shipping_guide', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('shipping_return', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('about', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('terms_and_condition', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('credit_hint', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('online_payment_limit', sa.Float(), nullable=True),
    sa.Column('symmart_standard_price', sa.Float(), nullable=False),
    sa.Column('symmart_premium_price', sa.Float(), nullable=False),
    sa.Column('symmart_national_price', sa.Float(), nullable=False),
    sa.Column('symmart_express_price', sa.Float(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('deliveryps',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('phone_number', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('faqs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('question', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('answer', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('homecarousels',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('category_id', sa.Integer(), nullable=False),
    sa.Column('image_public_id', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('image_version', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('address',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('address', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bank',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bank_name', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('bank_account', sqlmodel.sql.sqltypes.AutoString(length=191), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('productrecord',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wishlist',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_wishlist_product_id'), 'wishlist', ['product_id'], unique=False)
    op.create_index(op.f('ix_wishlist_user_id'), 'wishlist', ['user_id'], unique=False)
    op.create_table('debt',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('order_id', sa.Integer(), nullable=False),
    sa.Column('debt', sa.Integer(), nullable=False),
    sa.Column('debt_status', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['order_id'], ['order.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('debt')
    op.drop_index(op.f('ix_wishlist_user_id'), table_name='wishlist')
    op.drop_index(op.f('ix_wishlist_product_id'), table_name='wishlist')
    op.drop_table('wishlist')
    op.drop_table('productrecord')
    op.drop_table('bank')
    op.drop_table('address')
    op.drop_table('homecarousels')
    op.drop_table('faqs')
    op.drop_table('deliveryps')
    op.drop_table('company')
    # ### end Alembic commands ###
